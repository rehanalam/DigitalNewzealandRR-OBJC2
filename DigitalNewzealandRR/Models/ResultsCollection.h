//
//  ResultsCollection.h
//  DigitalNewzealandRR
//
//  This file was automatically generated by APIMATIC BETA v2.0 on 06/29/2016
//
#ifndef APIMATIC_RESULTSCOLLECTION
#define APIMATIC_RESULTSCOLLECTION

#import <Foundation/Foundation.h>
#import "JSONModel.h"
#import "APIHelper.h"



//protocol defined for deserialization of JSON
@protocol ResultsCollection
@end

@interface ResultsCollection : JSONModel

/**
* additional text describing the record
*/
@property NSString* additionalDescription;

/**
* lists the author's names
*/
@property NSString* author;

/**
* a string containing one or more category names separated by a comma (e.g. Images, Web pages)
*/
@property NSString* mcategory;

/**
* the item's parent collection
*/
@property NSString* collectionParent;

/**
* the top level collection
*/
@property NSString* collectionRoot;

/**
* the institution holding the content to which the record refers
*/
@property NSString* contentPartner;

/**
* the copyright statement applying to the object. This field may be empty.
*/
@property NSString* mcopyright;

/**
* a date associated with the record (e.g. 1996-01-01T00:00:00.000Z). This field may be empty
*/
@property NSNumber* date;

/**
*  Dublin Core categorisation indicating type
*/
@property NSString* dctype;

/**
* text describing the record
*/
@property NSString* description;

/**
* the display collection the item belongs to
*/
@property NSString* displayCollection;

/**
* string with date information in multiple, often unstructured formats (e.g. Circa 2000)
*/
@property NSString* displayDate;

/**
* The latitude and longitude in the following format: namespace:lat,long; Multiple values are seperated by semi-colons, for example: namespace:lat,long;namespace:lat,long;namespace:lat,long; NOTE: namespace is optional.
*/
@property NSString* geoCoOrds;

/**
* the internal DigitalNZ identifier (used by the Get Metadata API)
*/
@property NSString* mid;

/**
* this record is licensed for commercial use
*/
@property BOOL isCommercialUse;

/**
*  the url for the content on the contentpartner's website. Please use the source_url when providing HTML links (see below)
*/
@property NSString* landingUrl;

/**
* a larger thumbnail image with dimensions up to 800px (NB the API Terms do not extend rights to the use of these thumbnails)
*/
@property NSString* largeThumbnailUrl;

/**
* the library collection the item belongs to
*/
@property NSString* libraryCollection;

/**
* the licence for the object. This field may be empty
*/
@property NSString* license;

/**
* a number indicating the field of research
*/
@property int marsdenCode;

/**
* boolean value, if set to true it indicates the item doesn't have an external landing page, usually because it is a downloadable item such as a pdf or mpeg
*/
@property BOOL noLandingPage;

/**
* a url pointing to a downloadable object, i.e. an image, pdf or mpeg
*/
@property NSString* objectUrl;

/**
* boolean, associated with research paper items. True indicates the research paper has been peer reviewed
*/
@property BOOL peerReviewed;

/**
* list of dates published 
*/
@property NSString* publishedDate;

/**
* lists the publisher's names
*/
@property NSString* publisher;

/**
* the url of the object licence. This field may be empty.
*/
@property NSString* rightsUrl;

/**
* the url that will redirect users to the landing_url. By using this link (as opposed to the display_url) we are able to count clickthroughs which is helpful for demonstrating the value of DigitalNZ
*/
@property NSString* sourceUrl;

/**
* the date the record was added to DigitalNZ
*/
@property NSString* syndicationDate;

/**
* the url of for a thumbnail image of the content to which the record refers. This field may be empty.
*/
@property NSString* thumbnailUrl;

/**
* the title of the record
*/
@property NSString* title;


/**
* Key mappings for the json serialization and deserialization
*/
+(NSDictionary*) keyMap;

/**
* Key mapper for json serialization and deserialization
*/
+(JSONKeyMapper*) keyMapper;

/**
* Helps avoiding deserialization errors when one or more properties are missing
* @returns	True, indicating that all properties are optional for deserialization
*/
+(BOOL)propertyIsOptional:(NSString*) propertyName;

@end
#endif