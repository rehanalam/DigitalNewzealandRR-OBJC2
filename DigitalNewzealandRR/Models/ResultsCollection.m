//
//  ResultsCollection.m
//  DigitalNewzealandRR
//
//  This file was automatically generated by APIMATIC BETA v2.0 on 06/29/2016
//
#import "ResultsCollection.h"

@implementation ResultsCollection

/**
* additional text describing the record
*/
@synthesize additionalDescription;

/**
* lists the author's names
*/
@synthesize author;

/**
* a string containing one or more category names separated by a comma (e.g. Images, Web pages)
*/
@synthesize mcategory;

/**
* the item's parent collection
*/
@synthesize collectionParent;

/**
* the top level collection
*/
@synthesize collectionRoot;

/**
* the institution holding the content to which the record refers
*/
@synthesize contentPartner;

/**
* the copyright statement applying to the object. This field may be empty.
*/
@synthesize mcopyright;

/**
* a date associated with the record (e.g. 1996-01-01T00:00:00.000Z). This field may be empty
*/
@synthesize date;

/**
*  Dublin Core categorisation indicating type
*/
@synthesize dctype;

/**
* text describing the record
*/
@synthesize description;

/**
* the display collection the item belongs to
*/
@synthesize displayCollection;

/**
* string with date information in multiple, often unstructured formats (e.g. Circa 2000)
*/
@synthesize displayDate;

/**
* The latitude and longitude in the following format: namespace:lat,long; Multiple values are seperated by semi-colons, for example: namespace:lat,long;namespace:lat,long;namespace:lat,long; NOTE: namespace is optional.
*/
@synthesize geoCoOrds;

/**
* the internal DigitalNZ identifier (used by the Get Metadata API)
*/
@synthesize mid;

/**
* this record is licensed for commercial use
*/
@synthesize isCommercialUse;

/**
*  the url for the content on the contentpartner's website. Please use the source_url when providing HTML links (see below)
*/
@synthesize landingUrl;

/**
* a larger thumbnail image with dimensions up to 800px (NB the API Terms do not extend rights to the use of these thumbnails)
*/
@synthesize largeThumbnailUrl;

/**
* the library collection the item belongs to
*/
@synthesize libraryCollection;

/**
* the licence for the object. This field may be empty
*/
@synthesize license;

/**
* a number indicating the field of research
*/
@synthesize marsdenCode;

/**
* boolean value, if set to true it indicates the item doesn't have an external landing page, usually because it is a downloadable item such as a pdf or mpeg
*/
@synthesize noLandingPage;

/**
* a url pointing to a downloadable object, i.e. an image, pdf or mpeg
*/
@synthesize objectUrl;

/**
* boolean, associated with research paper items. True indicates the research paper has been peer reviewed
*/
@synthesize peerReviewed;

/**
* list of dates published 
*/
@synthesize publishedDate;

/**
* lists the publisher's names
*/
@synthesize publisher;

/**
* the url of the object licence. This field may be empty.
*/
@synthesize rightsUrl;

/**
* the url that will redirect users to the landing_url. By using this link (as opposed to the display_url) we are able to count clickthroughs which is helpful for demonstrating the value of DigitalNZ
*/
@synthesize sourceUrl;

/**
* the date the record was added to DigitalNZ
*/
@synthesize syndicationDate;

/**
* the url of for a thumbnail image of the content to which the record refers. This field may be empty.
*/
@synthesize thumbnailUrl;

/**
* the title of the record
*/
@synthesize title;


/**
* Key mappings for the json serialization and deserialization
*/
+(NSDictionary*) keyMap
{
    NSMutableDictionary* map = [[NSMutableDictionary alloc] init];
    [map addEntriesFromDictionary: @{
        @"additional_description": @"additionalDescription",
        @"author": @"author",
        @"category": @"mcategory",
        @"collection_parent": @"collectionParent",
        @"collection_root": @"collectionRoot",
        @"content_partner": @"contentPartner",
        @"copyright": @"mcopyright",
        @"date": @"date",
        @"dctype": @"dctype",
        @"description": @"description",
        @"display_collection": @"displayCollection",
        @"display_date": @"displayDate",
        @"geo_co_ords": @"geoCoOrds",
        @"id": @"mid",
        @"is_commercial_use ": @"isCommercialUse",
        @"landing_url": @"landingUrl",
        @"large_thumbnail_url": @"largeThumbnailUrl",
        @"library_collection": @"libraryCollection",
        @"license": @"license",
        @"marsden_code": @"marsdenCode",
        @"no_landing_page": @"noLandingPage",
        @"object_url": @"objectUrl",
        @"peer_reviewed": @"peerReviewed",
        @"published_date": @"publishedDate",
        @"publisher": @"publisher",
        @"rights_url": @"rightsUrl",
        @"source_url": @"sourceUrl",
        @"syndication_date": @"syndicationDate",
        @"thumbnail_url": @"thumbnailUrl",
        @"title": @"title"  
    }];

    return map;
}

/**
* Key mapper for json serialization and deserialization
*/
+(JSONKeyMapper*) keyMapper
{ 
  return [[JSONKeyMapper alloc] initWithDictionary: [self keyMap]];
}

/**
* Helps avoiding deserialization errors when one or more properties are missing
* @returns	True, indicating that all properties are optional for deserialization
*/
+(BOOL)propertyIsOptional:(NSString*) propertyName
{
    return YES;
}

@end